{"version":3,"sources":["logo.svg","components/Header.js","components/Sidebar.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","onClick","document","querySelector","classList","toggle","src","logo","alt","Sidebar","string","Card","letter","blueborder","toUpperCase","App","useState","setString","arr","setArray","id","val","placeholder","onChange","e","target","value","split","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iMAAe,G,MAAA,IAA0B,kC,eCsB1BA,MAjBf,WAII,OACI,yBAAQC,UAAU,aAAlB,UACI,qBAAKA,UAAU,cAAcC,QALb,WACpBC,SAASC,cAAc,YAAYC,UAAUC,OAAO,SAIhD,SACI,cAAC,IAAD,MAEJ,sBAAKL,UAAU,iBAAf,UACI,qBAAKM,IAAKC,EAAMP,UAAU,WAAWQ,IAAI,SACzC,iDCNDC,MARf,YAA8B,IAAXC,EAAU,EAAVA,OACf,OACI,uBAAOV,UAAU,UAAjB,SACI,4BAAIU,OCKDC,MARf,YAAuC,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,WACpB,OACI,qBAAKb,UAAWa,EAAa,gBAAkB,OAA/C,SACI,6BAAKD,EAAOE,mBCoCTC,MAnCf,WACE,MAA4BC,mBAAS,IAArC,mBAAON,EAAP,KAAeO,EAAf,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAYC,EAAZ,KAOA,OACE,qCACE,cAAC,EAAD,IACA,sBAAKnB,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,uBAAOoB,GAAG,SAASC,IAAI,SAASC,YAAY,mBAAmBC,SAVvE,SAAyBC,GACvBP,EAAUO,EAAEC,OAAOC,OACnBP,EAAUK,EAAEC,OAAOC,MAAOC,MAAM,UAU5B,sBAAK3B,UAAU,UAAf,UACE,cAAC,EAAD,CAASU,OAAQA,IACjB,qBAAKV,UAAU,eAAf,SAEIkB,EAAIU,KAAI,SAACC,EAAMC,GACb,OAAKA,EAAQ,GAAK,IAAM,EACf,cAAC,EAAD,CAAMjB,YAAY,EAAMD,OAAQiB,GAAWC,GAE3C,cAAC,EAAD,CAAMjB,YAAY,EAAOD,OAAQiB,GAAWC,kBClBtDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BZ,K","file":"static/js/main.7f26a86a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from \"../logo.svg\";\nimport '../index.css'\nimport { GiHamburgerMenu } from 'react-icons/all'\n\nfunction Header() {\n    let navTriggerHandler = () => {\n        document.querySelector('.sidebar').classList.toggle('show');\n    }\n    return (\n        <header className=\"App-header\">\n            <div className=\"nav-trigger\" onClick={navTriggerHandler}>\n                <GiHamburgerMenu />\n            </div>\n            <div className=\"logo-container\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h1>SmartCow</h1>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Sidebar({ string }) {\n    return (\n        <aside className=\"sidebar\">\n            <p>{string}</p>\n        </aside>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\n\nfunction Card({ letter, blueborder }) {\n    return (\n        <div className={blueborder ? 'card blue-box' : 'card'}>\n            <h3>{letter.toUpperCase()}</h3>\n        </div>\n    )\n}\n\nexport default Card\n","import './App.css';\nimport Header from './components/Header';\nimport SideBar from './components/Sidebar';\nimport Card from './components/Card';\nimport { useState } from 'react';\n\nfunction App() {\n  const [string, setString] = useState('');\n  const [arr, setArray] = useState([]);\n\n  function onChangeHandler(e) {\n    setString(e.target.value);\n    setArray((e.target.value).split(''));\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <div className=\"search-box\">\n          <input id=\"search\" val=\"agagag\" placeholder=\"Type a string...\" onChange={onChangeHandler} />\n        </div>\n        <div className=\"wrapper\">\n          <SideBar string={string} />\n          <div className=\"card-wrapper\">\n            {\n              arr.map((item, index) => {\n                if ((index + 1) % 3 === 0) {\n                  return <Card blueborder={true} letter={item} key={index} />\n                } else {\n                  return <Card blueborder={false} letter={item} key={index} />\n                }\n              })\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}